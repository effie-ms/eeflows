# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-02-18 15:16
from __future__ import unicode_literals

from django.db import migrations


def generate_eflows_config(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    BioPeriod = apps.get_model("stations", "BioPeriod")
    bioperiods = BioPeriod(
        name="Polish Bioperiods",
        January=1,
        February=1,
        March=2,
        April=2,
        May=2,
        June=2,
        July=3,
        August=3,
        September=3,
        October=4,
        November=4,
        December=4,
    )
    bioperiods.save()

    FishCoefficients = apps.get_model("stations", "FishCoefficients")
    base_p_coeffs_1 = FishCoefficients(
        name="Polish base fish coefficients: FET 1",
        winter=1.77,
        spring=0.65,
        summer=0.87,
        autumn=0.83,
    )
    base_p_coeffs_1.save()
    base_p_coeffs_2 = FishCoefficients(
        name="Polish base fish coefficients: FET 2",
        winter=2.20,
        spring=2.57,
        summer=4.41,
        autumn=0.90,
    )
    base_p_coeffs_2.save()
    base_p_coeffs_3 = FishCoefficients(
        name="Polish base fish coefficients: FET 3",
        winter=1.62,
        spring=4.08,
        summer=3.83,
        autumn=4.56,
    )
    base_p_coeffs_3.save()
    base_p_coeffs_4 = FishCoefficients(
        name="Polish base fish coefficients: FET 4",
        winter=4.43,
        spring=2.76,
        summer=2.98,
        autumn=2.63,
    )
    base_p_coeffs_4.save()
    base_p_coeffs_4s = FishCoefficients(
        name="Polish base fish coefficients: FET 4s",
        winter=1.08,
        spring=1.54,
        summer=1.44,
        autumn=1.39,
    )
    base_p_coeffs_4s.save()

    critical_p_coeffs_1 = FishCoefficients(
        name="Polish critical fish coefficients: FET 1",
        winter=0.56,
        spring=0.52,
        summer=0.71,
        autumn=0.68,
    )
    critical_p_coeffs_1.save()
    critical_p_coeffs_2 = FishCoefficients(
        name="Polish critical fish coefficients: FET 2",
        winter=0.80,
        spring=1.15,
        summer=0.74,
        autumn=0.21,
    )
    critical_p_coeffs_2.save()
    critical_p_coeffs_3 = FishCoefficients(
        name="Polish critical fish coefficients: FET 3",
        winter=0.62,
        spring=1.28,
        summer=1.17,
        autumn=0.73,
    )
    critical_p_coeffs_3.save()
    critical_p_coeffs_4 = FishCoefficients(
        name="Polish critical fish coefficients: FET 4",
        winter=0.74,
        spring=1.03,
        summer=0.93,
        autumn=0.75,
    )
    critical_p_coeffs_4.save()
    critical_p_coeffs_4s = FishCoefficients(
        name="Polish critical fish coefficients: FET 4s",
        winter=0.89,
        spring=1.11,
        summer=0.95,
        autumn=0.85,
    )
    critical_p_coeffs_4s.save()

    subsistence_p_coeffs_1 = FishCoefficients(
        name="Polish subsistence fish coefficients: FET 1",
        winter=0.52,
        spring=0.46,
        summer=0.56,
        autumn=0.60,
    )
    subsistence_p_coeffs_1.save()
    subsistence_p_coeffs_2 = FishCoefficients(
        name="Polish subsistence fish coefficients: FET 2",
        winter=0.60,
        spring=0.82,
        summer=0.61,
        autumn=0.16,
    )
    subsistence_p_coeffs_2.save()
    subsistence_p_coeffs_3 = FishCoefficients(
        name="Polish subsistence fish coefficients: FET 3",
        winter=0.37,
        spring=1.04,
        summer=0.85,
        autumn=0.55,
    )
    subsistence_p_coeffs_3.save()
    subsistence_p_coeffs_4 = FishCoefficients(
        name="Polish subsistence fish coefficients: FET 4",
        winter=0.55,
        spring=0.90,
        summer=0.69,
        autumn=0.56,
    )
    subsistence_p_coeffs_4.save()
    subsistence_p_coeffs_4s = FishCoefficients(
        name="Polish subsistence fish coefficients: FET 4s",
        winter=0.86,
        spring=1.05,
        summer=0.91,
        autumn=0.82,
    )
    subsistence_p_coeffs_4s.save()

    FET = apps.get_model("stations", "FET")
    fet1 = FET(
        fet_name="Mountain rivers and streams",
        fet_short_label="1",
        bioperiods_months=bioperiods,
        base_p_coefficients=base_p_coeffs_1,
        critical_p_coefficients=critical_p_coeffs_1,
        subsistence_p_coefficients=subsistence_p_coeffs_1,
    )
    fet1.save()
    fet2 = FET(
        fet_name="Flysch rivers",
        fet_short_label="2",
        bioperiods_months=bioperiods,
        base_p_coefficients=base_p_coeffs_2,
        critical_p_coefficients=critical_p_coeffs_2,
        subsistence_p_coefficients=subsistence_p_coeffs_2,
    )
    fet2.save()
    fet3 = FET(
        fet_name="Lowland streams",
        fet_short_label="3",
        bioperiods_months=bioperiods,
        base_p_coefficients=base_p_coeffs_3,
        critical_p_coefficients=critical_p_coeffs_3,
        subsistence_p_coefficients=subsistence_p_coeffs_3,
    )
    fet3.save()
    fet4 = FET(
        fet_name="Lowland rivers",
        fet_short_label="4",
        bioperiods_months=bioperiods,
        base_p_coefficients=base_p_coeffs_4,
        critical_p_coefficients=critical_p_coeffs_4,
        subsistence_p_coefficients=subsistence_p_coeffs_4,
    )
    fet4.save()
    fet5 = FET(
        fet_name="Lowland rivers with salmonids",
        fet_short_label="4s",
        bioperiods_months=bioperiods,
        base_p_coefficients=base_p_coeffs_4s,
        critical_p_coefficients=critical_p_coeffs_4s,
        subsistence_p_coefficients=subsistence_p_coeffs_4s,
    )
    fet5.save()


class Migration(migrations.Migration):

    dependencies = [
        ("stations", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(generate_eflows_config),
    ]
